// <auto-generated />
using System;
using System.Text.Json;
using GolobeTravelApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GolobeTravelApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250413125005_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GolobeTravelApi.Models.HotelBooking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BookingId"));

                    b.Property<int>("Adults")
                        .HasColumnType("integer");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CheckinDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CheckoutDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Children")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("HotelId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("NightlyRate")
                        .HasColumnType("numeric");

                    b.Property<int>("Nights")
                        .HasColumnType("integer");

                    b.Property<int>("Rooms")
                        .HasColumnType("integer");

                    b.Property<decimal>("ServiceFee")
                        .HasColumnType("numeric");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Pending");

                    b.Property<decimal>("Taxes")
                        .HasColumnType("numeric");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("BookingId");

                    b.HasIndex("HotelId");

                    b.HasIndex("UserId");

                    b.ToTable("TblHotelBookings");
                });

            modelBuilder.Entity("GolobeTravelApi.Models.HotelData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HotelAdditionalImageUrls")
                        .HasColumnType("text");

                    b.Property<JsonDocument>("HotelAmenities")
                        .HasColumnType("jsonb");

                    b.Property<string>("HotelCheckinTime")
                        .HasColumnType("text");

                    b.Property<string>("HotelCheckoutTime")
                        .HasColumnType("text");

                    b.Property<string>("HotelCity")
                        .HasColumnType("text");

                    b.Property<string>("HotelDetailsId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HotelDistance")
                        .HasColumnType("text");

                    b.Property<string>("HotelDistrict")
                        .HasColumnType("text");

                    b.Property<string>("HotelHotelDescription")
                        .HasColumnType("text");

                    b.Property<string>("HotelId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HotelImageUrls")
                        .HasColumnType("text");

                    b.Property<double?>("HotelLatitude")
                        .HasColumnType("double precision");

                    b.Property<double?>("HotelLongitude")
                        .HasColumnType("double precision");

                    b.Property<double?>("HotelLowestPrice")
                        .HasColumnType("double precision");

                    b.Property<string>("HotelName")
                        .HasColumnType("text");

                    b.Property<string>("HotelNation")
                        .HasColumnType("text");

                    b.Property<string>("HotelPartnerName")
                        .HasColumnType("text");

                    b.Property<string>("HotelPostcode")
                        .HasColumnType("text");

                    b.Property<string>("HotelRelevantPoiDistance")
                        .HasColumnType("text");

                    b.Property<string>("HotelReviewsDesc")
                        .HasColumnType("text");

                    b.Property<double?>("HotelReviewsScore")
                        .HasColumnType("double precision");

                    b.Property<int?>("HotelReviewsTotal")
                        .HasColumnType("integer");

                    b.Property<int?>("HotelStars")
                        .HasColumnType("integer");

                    b.Property<string>("HotelStreetAddress")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.ToTable("TblHotelData");
                });

            modelBuilder.Entity("GolobeTravelApi.Models.HotelEntity", b =>
                {
                    b.Property<string>("EntityId")
                        .HasColumnType("text");

                    b.Property<string>("EntityHierarchy")
                        .HasColumnType("text");

                    b.Property<string>("EntityLocation")
                        .HasColumnType("text");

                    b.Property<string>("EntityName")
                        .HasColumnType("text");

                    b.HasKey("EntityId");

                    b.ToTable("TblHotelEntities");
                });

            modelBuilder.Entity("GolobeTravelApi.Models.HotelReviews", b =>
                {
                    b.Property<long>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ReviewId"));

                    b.Property<int>("HotelId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("ReviewScoreDesc")
                        .HasColumnType("text");

                    b.Property<string>("ReviewText")
                        .HasColumnType("text");

                    b.Property<string>("ReviewTitle")
                        .HasColumnType("text");

                    b.Property<string>("ReviewUserType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("RewviewCommentDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ReviewId");

                    b.HasIndex("HotelId");

                    b.ToTable("TblHotelReviews");
                });

            modelBuilder.Entity("GolobeTravelApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CognitoId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TblUser");
                });

            modelBuilder.Entity("GolobeTravelApi.Models.UserBookings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Guests")
                        .HasColumnType("integer");

                    b.Property<int>("HotelId")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TblUserBookings");
                });

            modelBuilder.Entity("GolobeTravelApi.Models.UserFavorites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HotelId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TblUserFavorites");
                });

            modelBuilder.Entity("GolobeTravelApi.Models.HotelBooking", b =>
                {
                    b.HasOne("GolobeTravelApi.Models.HotelData", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .HasPrincipalKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GolobeTravelApi.Models.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GolobeTravelApi.Models.HotelData", b =>
                {
                    b.HasOne("GolobeTravelApi.Models.HotelEntity", "Entity")
                        .WithMany("Hotels")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("GolobeTravelApi.Models.HotelReviews", b =>
                {
                    b.HasOne("GolobeTravelApi.Models.HotelData", "Hotel")
                        .WithMany("Reviews")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("GolobeTravelApi.Models.UserBookings", b =>
                {
                    b.HasOne("GolobeTravelApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GolobeTravelApi.Models.UserFavorites", b =>
                {
                    b.HasOne("GolobeTravelApi.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GolobeTravelApi.Models.HotelData", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("GolobeTravelApi.Models.HotelEntity", b =>
                {
                    b.Navigation("Hotels");
                });

            modelBuilder.Entity("GolobeTravelApi.Models.User", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Favorites");
                });
#pragma warning restore 612, 618
        }
    }
}
